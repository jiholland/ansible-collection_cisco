---
# tasks file for backup

- name: Get current time from localhost.
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - date_time
  delegate_to: localhost
  run_once: true

- name: Checkout git repo to localhost.
  ansible.builtin.git:
    repo: "{{ backup_git_repo }}"
    dest: "{{ backup_git_dest }}"
    version: "{{ backup_git_version }}"
    accept_newhostkey: "{{ backup_git_accept_newhostkey }}"
    depth: 1
  delegate_to: localhost
  run_once: true
  notify: Remove git repo from localhost.

- name: Ensure that git user.name and user.email is defined.
  community.general.git_config:
    name: "{{ backup_item['name'] }}"
    value: "{{ backup_item['value'] }}"
    scope: local
    repo: "{{ backup_git_dest }}"
    state: present
  loop: "{{ backup_git_config }}"
  loop_control:
    loop_var: backup_item
    label: "{{ backup_item['value'] }}"
  delegate_to: localhost
  run_once: true

- name: Create backup directory.
  ansible.builtin.file:
    path: "{{ backup_git_dest }}/{{ backup_time }}"
    state: directory
    mode: u=rwx,g=rx,o=rx
  delegate_to: localhost
  run_once: true

- name: Include OS-specific tasks for taking backup.
  ansible.builtin.include_tasks:
    file: backup_{{ ansible_network_os }}.yml

- name: Schedule backup using cron.
  tags: [never, backup_schedule]
  ansible.builtin.cron:
    name: Backup running-config to git
    job: cd {{ playbook_dir }} && ansible-playbook playbook_network_backup.yml  -e 'target={{ target }}'
    weekday: "{{ backup_cron_weekday }}"
    hour: "{{ backup_cron_hour }}"
    minute: "{{ backup_cron_minute }}"
    state: present
  delegate_to: localhost
  run_once: true

- name: Print info about crontabs.
  tags: [never, backup_schedule]
  ansible.builtin.debug:
    msg:
      - Use command 'crontab -l' to display the current crontab in standard output.
      - Use command 'crontab -r' to remove the current crontab.
    verbosity: 0
  delegate_to: localhost
  run_once: true
