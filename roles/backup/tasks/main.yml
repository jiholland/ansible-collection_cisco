---
# tasks file for backup

- name: Get current time from localhost.
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - date_time
  delegate_to: localhost
  run_once: true

- name: Create temporary backup directory.
  ansible.builtin.tempfile:
    path: "{{ backup_temp_dir }}"
    prefix: ansible_backup_
    state: directory
  delegate_to: localhost
  run_once: true
  register: __backup_temp_dir_output
  notify: Remove temporary backup directory from localhost.

- name: Checkout git repo to localhost.
  ansible.builtin.git:
    repo: "{{ backup_git_repo }}"
    dest: "{{ __backup_temp_dir_output['path'] }}"
    accept_newhostkey: "{{ backup_git_accept_newhostkey }}"
    depth: 1
    version: "{{ backup_git_version }}"
  delegate_to: localhost
  run_once: true

- name: Ensure that git user.name and user.email is defined for repo.
  community.general.git_config:
    name: "{{ backup_item['name'] }}"
    value: "{{ backup_item['value'] }}"
    scope: local
    repo: "{{ __backup_temp_dir_output['path'] }}"
    state: present
  loop: "{{ backup_git_config }}"
  loop_control:
    loop_var: backup_item
    label: "{{ backup_item['value'] }}"
  delegate_to: localhost
  run_once: true

- name: Create backup directory for current time.
  ansible.builtin.file:
    path: "{{ __backup_temp_dir_output['path'] }}/{{ ansible_facts['date_time']['date'] }}"
    state: directory
    mode: u=rwx,g=rx,o=rx
  delegate_to: localhost
  run_once: true

- name: Include OS-specific tasks for taking backup.
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/backup_{{ ansible_network_os }}.yml"

- name: Schedule backup using cron.
  tags: [never, backup_schedule]
  ansible.builtin.cron:
    name: Backup running-config to git
    job: cd {{ playbook_dir }} && ansible-playbook playbook_network_backup.yml  -e 'target={{ target }}'
    weekday: "{{ backup_cron_weekday }}"
    hour: "{{ backup_cron_hour }}"
    minute: "{{ backup_cron_minute }}"
    state: present
  delegate_to: localhost
  run_once: true
