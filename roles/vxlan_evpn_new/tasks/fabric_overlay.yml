---
# tasks file for vxlan_evpn

- name: fabric_overlay | Enable EVPN control plane for VXLAN.
  cisco.nxos.nxos_evpn_global:
    nv_overlay_evpn: true
  notify: Save nxos.

- name: fabric_overlay | Configure BGP ASN, Router-ID and neighbors.
  cisco.nxos.nxos_bgp_global:
    config:
      as_number: "{{ bgp_asn }}"
      router_id: "{{ rid_ip }}"
      log_neighbor_changes: true
      neighbors:
        - neighbor_address: "{{ hostvars[vxlan_evpn_item]['rid_ip'] }}"
          remote_as: "{{ bgp_asn }}"
          description: "{{ hostvars[vxlan_evpn_item]['inventory_hostname'] }}"
          update_source: "{{ vxlan_evpn_rid_loopback }}"
    state: merged
  when:
    - hostvars[vxlan_evpn_item]['inventory_hostname'] != inventory_hostname
    - hostvars[vxlan_evpn_item]['bgp_asn'] == bgp_asn
    - hostvars[vxlan_evpn_item]['bgp_route_reflector'] | default(false) != bgp_route_reflector | default(false)
  loop: "{{ vxlan_evpn_bgp_neighbors }}"
  loop_control:
    loop_var: vxlan_evpn_item
    label: BGP neighbor {{ hostvars[vxlan_evpn_item]['inventory_hostname'] }}
  notify: Save nxos.

- name: fabric_overlay | Configure L2VPN EVPN for BGP neighbors. Set address-family to EVPN. Define leafs as RR clients under BGP process.
  cisco.nxos.nxos_bgp_neighbor_address_family:
    config:
      as_number: "{{ bgp_asn }}"
      neighbors:
        - neighbor_address: "{{ hostvars[vxlan_evpn_item]['rid_ip'] }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              route_reflector_client: "{{ bgp_route_reflector | default(false) }}"
              send_community:
                both: true
    state: merged
  when:
    - hostvars[vxlan_evpn_item]['inventory_hostname'] != inventory_hostname
    - hostvars[vxlan_evpn_item]['bgp_asn'] == bgp_asn
    - hostvars[vxlan_evpn_item]['bgp_route_reflector'] | default(false) != bgp_route_reflector | default(false)
  loop: "{{ vxlan_evpn_bgp_neighbors }}"
  loop_control:
    loop_var: vxlan_evpn_item
    label: BGP neighbor {{ hostvars[vxlan_evpn_item]['inventory_hostname'] }}
  notify: Save nxos.

- name: fabric_overlay | Create route-map to redistribute Host-SVI (Silent Host).
  cisco.nxos.nxos_route_maps:
    config:
      - route_map: "{{ vxlan_evpn_rmap_host_svi_name }}"
        entries:
          - sequence: 10
            action: permit
            match:
              tags: "{{ vxlan_evpn_rmap_host_svi_tag }}"
    state: merged
  when: network_function in ['leaf', 'border-leaf']
  notify: Save nxos.


- name: fabric_overlay | VTEP configuration for leafs and border-leafs.
  when: network_function in ['leaf', 'border-leaf']
  block:

    - name: fabric_overlay | Configure anycast gateway MAC address for distributed routing.
      cisco.nxos.nxos_overlay_global:
        anycast_gateway_mac: "{{ vxlan_evpn_anycast_gw_mac }}"
      notify: Save nxos.

    - name: fabric_overlay | Create VXLAN VTEP (NVE) interface for BGP EVPN control plane. Use BGP for host reachability. Enable interface.
      cisco.nxos.nxos_vxlan_vtep:
        interface: nve1
        description: "*** VXLAN VTEP ***"
        source_interface: "{{ vxlan_evpn_vtep_loopback }}"
        host_reachability: true
        global_mcast_group_L2: "{{ vxlan_evpn_global_mcast_group_l2 }}"
        shutdown: false
        state: present
      notify: Save nxos.


- name: fabric_overlay | Configure vPC multihoming.
  when: vpc_domain is defined
  block:

    - name: fabric_overlay | Advertise PIP in BGP process.
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              advertise_pip: true
        state: merged
      notify: Save nxos.

    - name: fabric_overlay | Advertise virtual-rmac in NVE interface.
      cisco.nxos.nxos_config:
        lines:
          - advertise virtual-rmac  # Enter shutdown, no shutdown to take effect.
        parents:
          - interface nve1
      notify: Save nxos.
