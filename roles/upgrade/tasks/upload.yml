---
# tasks file for upgrade

- name: upload | Check if the compliant image is present in flash.
  cisco.ios.ios_command:
    commands:
      - "show flash: | include {{ upgrade_compliant_image }}"
  when: ansible_network_os is eq('cisco.ios.ios')
  register: upgrade_flash_output


- name: upload | Upload image.
  when:
    - ansible_network_os is eq('cisco.ios.ios')
    - upgrade_flash_output['stdout'][0] is not ansible.builtin.search(upgrade_compliant_image)
  block:

    - name: upload | Remove inactive software.
      cisco.ios.ios_command:
        commands:
          - command: install remove inactive
            prompt: Do you want to remove the above files
            answer: y
      vars:
        ansible_command_timeout: 1800
      when: ansible_facts['net_iostype'] is eq('IOS-XE')

    - name: upload | Ensure maximum blocksize for TFTP.
      cisco.ios.ios_config:
        lines:
          - ip tftp blocksize 8192

    - name: upload | Upload compliant OS.
      cisco.ios.ios_command:
        commands:
          - command: copy tftp://{{ upgrade_tftp_server }}/{{ upgrade_compliant_image }} flash:/
            prompt: Destination filename
            answer: "\r"
      vars:
        ansible_command_timeout: 3600


- name: upload | Upload image.
  when: ansible_network_os is eq('cisco.nxos.nxos')
  block:

    - name: upload | Check if the compliant image is present in bootflash.
      cisco.nxos.nxos_command:
        commands:
          - "dir bootflash: | include {{ upgrade_compliant_image }}"
      register: upgrade_bootflash_output

    - name: upload | Upload compliant OS.
      cisco.nxos.nxos_file_copy:
        file_pull: true
        remote_file: "{{ upgrade_nexus['remote_file'] }}"
        remote_scp_server: "{{ upgrade_nexus['remote_scp_server'] }}"
        remote_scp_server_user: "{{ upgrade_nexus['remote_scp_server_user'] }}"
        remote_scp_server_password: "{{ upgrade_nexus['remote_scp_server_password'] }}"
        vrf: "{{ upgrade_nexus['vrf'] }}"
      when: upgrade_bootflash_output['stdout'][0] is not ansible.builtin.search(upgrade_compliant_image)
